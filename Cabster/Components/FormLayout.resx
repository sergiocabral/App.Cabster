<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB8AAAAfCAYAAAAfrhY5AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        AwAAAwMBdHKTDQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARHSURBVFhHrVZJ
        iBxVGB4XRI0LbgQPiijiAoJ4CNGIIsQNJEhQ0IOePHgRo0ZBIctFEk9ekyBeJU0Ixpmpqs5U1Ut3T6pe
        TSY6IyQHNUOIXhKXREwY01na73v1Vds9vU5mPvjpru/f3vq/f2QYlEpHrvPjdH0Q211+bGchf0HOQhr6
        5fdsrk/X016uV45SktwQxNknfpydUqJCfoMcBn/Aj7Lv8f/3Fh3lpBfZjcaY6xVqcRiPpp5BkDkFO+8b
        W+KsvGr1Lpm0IahO3x1E9i3Y7oNckt8x+D0tk+EQGPuRAlxGwq8mJqbvlWoo7K/YB/3IfqMBXMQqbJCq
        PzDSbblTdiowyUuirwhlk72CWDwPDS9OPxfdHZjlhxrtr3586CHRS0LZJA8j3nHGxYq+L7od5Sh5CgYX
        IX8vV+ICY5X0EcT9E3LBM3a16Bz5VbI/Qxo4va+LXlZgVdcxPvb/p7aryOVwiU32nagmgihZBf2Xw14b
        2tGefqKawDnanQ8gfc8RpVLpGhAnIJe5PI5sAe8rHVBAKvsmJ28W3RWeZ2/Bga3mCexG0U1o/3mLjm/d
        2riawV9wxsbul00HoN9BG0g2VqvdJroNQZDcTr3sdoruAGY9SptyaJ8fwRX4gh+BSd+RvgNudUy619nF
        9ocwzO6QymHUTN9J3iWGHe2l6oAXZ2+7OFG2nftwQE73Sd8V3EssaexsYzvDhORZ8fDNeo8YNh50NsqV
        qXsKWy7pMcg/jUbjKul7olyeXcG9d85I6IX2UVSyH/lNnnqZ9gXsUXiyX/jnHI+/+IHAzG6CzyQTQooa
        XiMvk4GA/RHIWf45D5kRPxS4RfCpQ5i4PhYeul+qoaDzMc/k85A58QPBw9Y8XLmv24LiDAwDLjl8zjE5
        6+48lu1a6XqCCWA7A+GBqfIZRaCD/OaAeN1k2hM8F7Dnds0xeUTn8UrymPRdwfsNu2biYo9ZeMDVHI8G
        A8/vrc6hB1j5ZBvh3tnN+Uf2sfQd0CFLnV1L4gL8brkFtdHR6Rul6gA6o8/yONkWjCR9Qk6HpW8DWyne
        ydwmDXtdJybEBHzaobZ73QoNSyr0vNqNcTP1uCMxakvCi5NnHdEC6Da5xOhMMMO+BYSvFVZyj7OPsw9E
        NwHuRacz6ZQoVCmTvVqQruC3gC0U6vHL+hwIzhil890wtCtFOXDg6PGO5gNL14nOUSxZv71fCrB1as/s
        hKj/wRliiU9DWedLJ3pZgAblTcRll3SmZzMahPY5GLDiseQuywAw4zeU+MLAhhTv+mtY+n9pzIag3/PY
        D/TTNWbiOmcvVX/w1MOBDZ87hHjr10o1EHwdOUP45s9sbP9YdAuel077rQJQGOxTP8yeXFjH+aajKVmj
        a8kXy/mwa+H7LbPFg+0OArkS3Cluexbydd51nh+FWDq86OADOAMbsA1sp1jj0d/bM5CTbCiQ8Gu2Ygvv
        d2+MjPwH6tg9hk5cjjIAAAAASUVORK5CYII=
</value>
  </data>
</root>