<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>